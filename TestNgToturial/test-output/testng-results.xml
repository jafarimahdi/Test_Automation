<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-10-20T23:15:18 CEST" name="Suite" finished-at="2019-10-20T23:15:18 CEST" duration-ms="246">
    <groups>
      <group name="smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@45f45fa1]" name="ploan" class="test.day2"/>
        <method signature="day4.mobileLoginHomeloan()[pri:0, instance:test.day4@52e677af]" name="mobileLoginHomeloan" class="test.day4"/>
        <method signature="day3.mobileLoginCarloan()[pri:0, instance:test.day3@b62fe6d]" name="mobileLoginCarloan" class="test.day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2019-10-20T23:15:18 CEST" name="Personal Loan" finished-at="2019-10-20T23:15:18 CEST" duration-ms="105">
      <class name="test.day4">
        <test-method signature="loginApiHomeloan()[pri:0, instance:test.day4@52e677af]" started-at="2019-10-20T23:15:18 CEST" name="loginApiHomeloan" finished-at="2019-10-20T23:15:18 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApiHomeloan -->
        <test-method signature="mobileLoginHomeloan()[pri:0, instance:test.day4@52e677af]" started-at="2019-10-20T23:15:18 CEST" name="mobileLoginHomeloan" finished-at="2019-10-20T23:15:18 CEST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeloan -->
        <test-method signature="webloginHomeloan(java.lang.String)[pri:0, instance:test.day4@52e677af]" started-at="2019-10-20T23:15:18 CEST" name="webloginHomeloan" finished-at="2019-10-20T23:15:18 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webloginHomeloan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequeiste()[pri:0, instance:test.day2@45f45fa1]" started-at="2019-10-20T23:15:18 CEST" name="prerequeiste" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequeiste -->
        <test-method signature="ploan()[pri:0, instance:test.day2@45f45fa1]" started-at="2019-10-20T23:15:18 CEST" name="ploan" finished-at="2019-10-20T23:15:18 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="demo()[pri:0, instance:test.day1@534df152]" started-at="2019-10-20T23:15:18 CEST" name="demo" finished-at="2019-10-20T23:15:18 CEST" duration-ms="24" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at test.day1.demo(day1.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="lastexecute()[pri:0, instance:test.day1@534df152]" started-at="2019-10-20T23:15:18 CEST" name="lastexecute" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecute -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
    <test started-at="2019-10-20T23:15:18 CEST" name="Carlon" finished-at="2019-10-20T23:15:18 CEST" duration-ms="32">
      <class name="test.day3">
        <test-method is-config="true" signature="BeforeSuite()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="BeforeSuite" finished-at="2019-10-20T23:15:18 CEST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="beforeClass" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="beforeMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileSingOutCarlon(java.lang.String, java.lang.String)[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="MobileSingOutCarlon" data-provider="getData" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[First user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSingOutCarlon -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="AfterMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="beforeMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileSingOutCarlon(java.lang.String, java.lang.String)[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="MobileSingOutCarlon" data-provider="getData" finished-at="2019-10-20T23:15:18 CEST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Secound user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSingOutCarlon -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="AfterMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="beforeMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileSingOutCarlon(java.lang.String, java.lang.String)[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="MobileSingOutCarlon" data-provider="getData" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Therid user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSingOutCarlon -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="AfterMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="beforeMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="mobileLoginCarloan()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="mobileLoginCarloan" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarloan -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="AfterMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="webloginCarloan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="webloginCarloan" finished-at="2019-10-20T23:15:18 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalCarlon.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webloginCarloan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="beforeMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="AfterMethod" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.day3@b62fe6d]" started-at="2019-10-20T23:15:18 CEST" name="afterClass" finished-at="2019-10-20T23:15:18 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="AfterSuite()[pri:0, instance:test.day1@534df152]" started-at="2019-10-20T23:15:18 CEST" name="AfterSuite" finished-at="2019-10-20T23:15:18 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Carlon -->
  </suite> <!-- Suite -->
</testng-results>
